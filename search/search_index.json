{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ml-cat-project","text":"<p>A small Machine Learning toy project to learn ML principles. It aims to recognize cats on a picture.</p> <ul> <li>Github repository: https://github.com/edouardbruelhart/ml-cat-project/</li> </ul>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li>First clone the repository and install dependencies:</li> </ul> <pre><code>git clone git@github.com:edouardbruelhart/ml-cat-project.git\ncd ml-cat-project\npoetry install\n</code></pre> <ul> <li>Then create necessary folders to host training data:</li> </ul> <pre><code>cd ml_cat_project\nmkdir dataset\ncd dataset\nmkdir cat\nmkdir not_cat\n</code></pre> <ul> <li>Finally add at least 50 pictures containing cats in the cat folder and 50 pictures not containing cats in the not_cat folder. It's better to not duplicate pictures or add multiple similar pictures.</li> </ul>"},{"location":"#the-rest-is-coming-soon","title":"The rest is coming soon!","text":""},{"location":"modules/","title":"Modules","text":""},{"location":"modules/#ml_cat_project.src.model.SimpleNN","title":"<code>SimpleNN</code>","text":"<p>               Bases: <code>Module</code></p> <p>Simple neural network using a pretrained ResNet18 backbone. Designed for 2-class classification: cat vs not-cat.</p> Source code in <code>ml_cat_project/src/model.py</code> <pre><code>class SimpleNN(nn.Module):\n    \"\"\"\n    Simple neural network using a pretrained ResNet18 backbone.\n    Designed for 2-class classification: cat vs not-cat.\n    \"\"\"\n\n    def __init__(self, num_classes: int = 2):\n        super().__init__()\n        # Load ResNet18 backbone\n        self.backbone = models.resnet18()\n        # Replace the final fully connected layer\n        self.backbone.fc = nn.Linear(self.backbone.fc.in_features, num_classes)\n\n    def forward(self, x: torch.Tensor) -&gt; Any:\n        return self.backbone(x)\n</code></pre>"}]}